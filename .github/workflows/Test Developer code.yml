name: Test Developer Code Backend

on:

  push:
   branches: [ feature* ]
env:
  commitmsg: ${{ github.event.head_commit.message }} 

jobs:
  Test-Backend-Build:
    
    runs-on: ubuntu-latest
    name: Test Backend Build
    steps:
      - name: Checking out my release repo
        uses: actions/checkout@v2
        with:
          repository: anudan-org/gms-service
          token: ${{ secrets.MY_PAT }}
      - run: pwd
      - run: ls -lrt
      - run: ./gradlew bootJar
      - run: pwd
      - run: ls -lrt

      

  unit-and-functional-testing-Backend:
    runs-on: ubuntu-latest
    name: unit and functional testing Backend
    steps: 
    - name: checking out gms-service repo
      uses: actions/checkout@v2
      with:
          repository: anudan-org/gms-service
          token: ${{ secrets.MY_PAT }}
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
          java-version: 1.8      
    - name: test backend code(functional)
      run: |
        ls -l
        ./gradlew test jacocoTestReport
    #- name: test backend code(unit) Run JUnit Test and record results
    #  run: ./gradlew test jacocoTestReport
  
  Static-Code-Analysis-Sonarqube-Backend:
    runs-on: ubuntu-latest
    name: Static Code Analysis Sonarqube Test Backend
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
          java-version: 11
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
    - name: analyze
      env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: | 
        ./gradlew  sonarqube --info   

  Notify-on-email:
    runs-on: ubuntu-latest
    if: always()
    needs: [Test-Backend-Build, unit-and-functional-testing-Backend, Static-Code-Analysis-Sonarqube-Backend]
    name: EmailNotify
    steps:
      - name: Send some mail
        uses: wadeww/send-email-action@master
        with:
          server_address: smtp.gmail.com
          port: ${{ secrets.SMTP_SERVER_PORT }}
          username: ${{ secrets.AUTH_USER }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Test Build - Backend Workflow Finished
          body: ${{github.repository}} 


                1) Buildjob- ${{needs.Test-Backend-Build.result}} 


                2) unit and functional testing Backend - ${{needs.unit-and-functional-testing-Backend.result}} 


                3) Static Code Analysis Sonarqube Test Backend - ${{needs.Static-Code-Analysis-Sonarqube-Backend.result}} 


                4) commit messages - ${{ env.commitmsg }}


                5) changes done by - ${{ github.actor }}

                  
                6) The name of the webhook event that triggered the workflow - ${{ github.event_name}}


          to: prabhu@socialalpha.org
          from: donotreply@anudan.org